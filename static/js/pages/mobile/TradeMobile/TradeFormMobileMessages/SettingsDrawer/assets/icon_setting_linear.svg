var _path, _path2;
const _excluded = ["title", "titleId"];
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }
import * as React from "react";
import { forwardRef } from "react";
const SvgIconSettingLinear = (_ref, ref) => {
  let {
      title,
      titleId
    } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: 13,
    height: 12,
    viewBox: "0 0 13 12",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: ref,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6.75 0.4375C6.36071 0.4375 6.01106 0.545213 5.64526 0.715202C5.29725 0.876925 4.89747 1.11357 4.41218 1.40084L4.38501 1.41693L4.38498 1.41694L4.01519 1.63581C3.52951 1.92352 3.12975 2.16033 2.81932 2.38854C2.49287 2.62854 2.2301 2.88331 2.03838 3.22397L2.03831 3.22411L2.03827 3.22418C1.84699 3.56389 1.76401 3.92245 1.72489 4.32937C1.68748 4.71858 1.68749 5.19193 1.6875 5.76994V6.23007C1.68749 6.80807 1.68748 7.2813 1.72489 7.67045C1.76402 8.07746 1.84704 8.43594 2.03827 8.77582L2.03833 8.77592L2.03838 8.77603C2.23003 9.11632 2.4927 9.3712 2.81926 9.61135C3.13236 9.84159 3.53608 10.0804 4.02737 10.3709L4.04149 10.3793L4.38449 10.5828L4.3848 10.583L4.40617 10.5956L4.40618 10.5956C4.89423 10.8848 5.29582 11.1227 5.64534 11.285C6.01126 11.455 6.36085 11.5625 6.75 11.5625C7.13929 11.5625 7.48894 11.4548 7.85474 11.2848C8.20275 11.1231 8.60252 10.8864 9.08781 10.5992L9.11502 10.5831L9.11527 10.5829L9.11551 10.5828L9.48268 10.365C9.96928 10.0769 10.3697 9.83993 10.6806 9.61144C11.0071 9.37148 11.2699 9.11669 11.4616 8.77603L11.4616 8.77599L11.4617 8.77582C11.653 8.43607 11.736 8.07737 11.7751 7.67043C11.8125 7.28116 11.8125 6.80781 11.8125 6.23001V5.76994C11.8125 5.19193 11.8125 4.7187 11.7751 4.32955C11.736 3.92254 11.653 3.56406 11.4617 3.22418L11.4616 3.22397C11.2699 2.8836 11.0072 2.62884 10.6807 2.38878C10.3695 2.15987 9.96843 1.9223 9.48087 1.63348L9.48085 1.63347L9.09386 1.4044C8.60579 1.11526 8.20419 0.877339 7.85466 0.714977C7.48874 0.545001 7.13915 0.4375 6.75 0.4375ZM6.11936 1.73542C5.82748 1.87106 5.47493 2.07909 4.95802 2.38506L4.95799 2.38507L4.6152 2.58795L4.61519 2.58796L4.61499 2.58807C4.09831 2.89416 3.74632 3.10335 3.48568 3.29496C3.23545 3.47891 3.10551 3.62158 3.01874 3.77582L3.01862 3.77603C2.93147 3.93076 2.87524 4.11964 2.84473 4.437C2.8131 4.76612 2.8125 5.18532 2.8125 5.797V6.203C2.8125 6.81468 2.8131 7.23375 2.84473 7.5628C2.87522 7.87989 2.93141 8.06888 3.01862 8.22397C3.10547 8.37818 3.23556 8.52104 3.48574 8.70502C3.74626 8.8966 4.09833 9.10586 4.61485 9.41134L4.61518 9.41154L4.61552 9.41173L4.9582 9.61505C5.02935 9.65703 5.10039 9.69947 5.17151 9.74196C5.48129 9.92702 5.79243 10.1129 6.11928 10.2647C6.39974 10.395 6.58215 10.4375 6.75 10.4375C6.91771 10.4375 7.10006 10.395 7.38064 10.2646C7.67249 10.1289 8.02501 9.92095 8.54185 9.61502L8.88449 9.41173L8.88473 9.41159L8.88498 9.41144C9.40174 9.10556 9.75377 8.89647 10.0144 8.70493C10.2646 8.52107 10.3945 8.37841 10.4813 8.22418L10.4813 8.22407L10.4814 8.22397C10.5685 8.06928 10.6248 7.8803 10.6553 7.56282C10.6869 7.23364 10.6875 6.81442 10.6875 6.203V5.797C10.6875 5.18532 10.6869 4.76624 10.6553 4.4372C10.6248 4.12011 10.5686 3.93111 10.4814 3.77603C10.3946 3.6219 10.2646 3.47916 10.0143 3.2951C9.75363 3.10344 9.40158 2.8941 8.88501 2.58807L8.8848 2.58795L8.5418 2.38495C8.02502 2.07881 7.67248 1.8708 7.38072 1.73527C7.10026 1.605 6.91785 1.5625 6.75 1.5625C6.58229 1.5625 6.39994 1.60504 6.11936 1.73542Z",
    fill: "#1F292E"
  })), _path2 || (_path2 = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6.75 5.0625C6.23223 5.0625 5.8125 5.48223 5.8125 6C5.8125 6.51777 6.23223 6.9375 6.75 6.9375C7.26777 6.9375 7.6875 6.51777 7.6875 6C7.6875 5.48223 7.26777 5.0625 6.75 5.0625ZM4.6875 6C4.6875 4.86091 5.61091 3.9375 6.75 3.9375C7.88909 3.9375 8.8125 4.86091 8.8125 6C8.8125 7.13909 7.88909 8.0625 6.75 8.0625C5.61091 8.0625 4.6875 7.13909 4.6875 6Z",
    fill: "#1F292E"
  })));
};
const ForwardRef = /*#__PURE__*/forwardRef(SvgIconSettingLinear);
export { ForwardRef as ReactComponent };
export default __webpack_public_path__ + "static/media/icon_setting_linear.48e6cf20b27944c4a31a7ff093a4124b.svg";