var _path, _path2;
const _excluded = ["title", "titleId"];
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }
import * as React from "react";
import { forwardRef } from "react";
const SvgIconNavSwitchG = (_ref, ref) => {
  let {
      title,
      titleId
    } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: ref,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M11.303 2.80301C11.5959 2.51012 12.0708 2.51012 12.3637 2.80301L13.697 4.13635C13.8377 4.277 13.9167 4.46776 13.9167 4.66668C13.9167 4.86559 13.8377 5.05635 13.697 5.19701L12.3637 6.53034C12.0708 6.82323 11.5959 6.82323 11.303 6.53034C11.0102 6.23745 11.0102 5.76257 11.303 5.46968L11.3554 5.41733C11.0071 5.419 10.7488 5.42489 10.5356 5.44561C10.2625 5.47215 10.1227 5.51881 10.0165 5.57893C9.91037 5.63905 9.79846 5.73488 9.63518 5.95541C9.46224 6.189 9.2699 6.50798 8.97795 6.99457L7.29073 9.80661C7.02121 10.2558 6.79187 10.6381 6.57044 10.9372C6.33453 11.2558 6.0749 11.5269 5.72258 11.7264C5.37026 11.9259 5.00422 12.009 4.6096 12.0474C4.23922 12.0834 3.79345 12.0834 3.26959 12.0833H2.83337C2.41916 12.0833 2.08337 11.7476 2.08337 11.3333C2.08337 10.9191 2.41916 10.5833 2.83337 10.5833H3.23528C3.80273 10.5833 4.17522 10.5825 4.46449 10.5544C4.7376 10.5279 4.87735 10.4812 4.98353 10.4211C5.08972 10.361 5.20162 10.2651 5.3649 10.0446C5.53784 9.81102 5.73018 9.49204 6.02213 9.00545L7.70936 6.19341C7.97887 5.74419 8.20821 5.36193 8.42964 5.06285C8.66555 4.74421 8.92518 4.47311 9.2775 4.27363C9.62982 4.07415 9.99587 3.991 10.3905 3.95264C10.6694 3.92554 10.991 3.91885 11.3566 3.91721L11.303 3.86367C11.0102 3.57078 11.0102 3.09591 11.303 2.80301Z",
    fill: "#00BFBF"
  })), _path2 || (_path2 = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M4.60648 5.43969C4.50501 5.41994 4.3857 5.41666 3.94512 5.41666H2.83337C2.41916 5.41666 2.08337 5.08088 2.08337 4.66666C2.08337 4.25245 2.41916 3.91666 2.83337 3.91666H3.94512C3.96595 3.91666 3.98651 3.91665 4.00682 3.91664C4.3569 3.91648 4.63117 3.91635 4.89307 3.96732C5.47934 4.08144 6.01252 4.38332 6.41201 4.82733C6.59047 5.02568 6.73146 5.26093 6.91144 5.56121C6.92187 5.57863 6.93244 5.59627 6.94316 5.61413C7.15627 5.96931 7.0411 6.43001 6.68591 6.64312C6.33073 6.85623 5.87003 6.74105 5.65692 6.38587C5.43025 6.00808 5.36605 5.90745 5.29691 5.8306C5.11532 5.62878 4.87297 5.49156 4.60648 5.43969ZM8.31417 9.35688C8.66935 9.14377 9.13005 9.25894 9.34316 9.61413C9.56983 9.99191 9.63403 10.0925 9.70317 10.1694C9.88476 10.3712 10.1271 10.5084 10.3936 10.5603C10.4951 10.5801 10.6144 10.5833 11.055 10.5833H11.356L11.303 10.5303C11.0102 10.2374 11.0102 9.76256 11.303 9.46967C11.5959 9.17677 12.0708 9.17677 12.3637 9.46967L13.697 10.803C13.8377 10.9437 13.9167 11.1344 13.9167 11.3333C13.9167 11.5322 13.8377 11.723 13.697 11.8637L12.3637 13.197C12.0708 13.4899 11.5959 13.4899 11.303 13.197C11.0102 12.9041 11.0102 12.4292 11.303 12.1363L11.356 12.0833H11.055C11.0341 12.0833 11.0136 12.0833 10.9933 12.0834C10.6432 12.0835 10.3689 12.0836 10.107 12.0327C9.52074 11.9186 8.98756 11.6167 8.58808 11.1727C8.40962 10.9743 8.26861 10.739 8.08864 10.4388C8.0782 10.4214 8.06763 10.4037 8.05692 10.3859C7.84381 10.0307 7.95898 9.56999 8.31417 9.35688Z",
    fill: "#00BFBF"
  })));
};
const ForwardRef = /*#__PURE__*/forwardRef(SvgIconNavSwitchG);
export { ForwardRef as ReactComponent };
export default __webpack_public_path__ + "static/media/icon_nav_switch_g.0b3c9c0aa65670fa034ce0d9b9458dde.svg";