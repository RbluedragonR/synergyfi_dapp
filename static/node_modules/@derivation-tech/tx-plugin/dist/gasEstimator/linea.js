"use strict";
var __importDefault =
  (this && this.__importDefault) ||
  function (mod) {
    return mod && mod.__esModule ? mod : { default: mod };
  };
Object.defineProperty(exports, "__esModule", { value: true });
exports.LineaGasEstimator = void 0;
const ethers_1 = require("ethers");
const async_retry_1 = __importDefault(require("async-retry"));
class LineaGasEstimator {
  async getGasPrice(chainId, provider, txType, scaler = 1) {
    const { reward, baseFeePerGas } = await (0, async_retry_1.default)(
      async () => provider.send("eth_feeHistory", [5, "latest", [20]])
    );
    let maxPriorityFeePerGas = parseFloat(
      reward
        .reduce(
          (acc, currentValue) => acc.add(currentValue[0]),
          ethers_1.BigNumber.from(0)
        )
        .div(reward.length)
    );
    const baseFee = parseFloat(
      ethers_1.BigNumber.from(
        baseFeePerGas[baseFeePerGas.length - 1]
      ).toString()
    );
    const maxFeePerGas = (baseFee + maxPriorityFeePerGas) * scaler;
    maxPriorityFeePerGas = maxFeePerGas - baseFee;
    return {
      maxFeePerGas: Number(maxFeePerGas.toFixed(0)),
      maxPriorityFeePerGas: Number(maxPriorityFeePerGas.toFixed(0)),
    };
  }
}
exports.LineaGasEstimator = LineaGasEstimator;
