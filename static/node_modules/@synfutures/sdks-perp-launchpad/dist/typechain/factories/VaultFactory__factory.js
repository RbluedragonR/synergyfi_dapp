"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VaultFactory__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_config",
        type: "address",
      },
      {
        internalType: "address",
        name: "_guardian",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vaultBeacon",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidCommissionRatio",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPortfolioLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "suspicious",
        type: "address",
      },
    ],
    name: "NotVault",
    type: "error",
  },
  {
    inputs: [],
    name: "RenounceOwnershipDisabled",
    type: "error",
  },
  {
    inputs: [],
    name: "VaultAlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "enum Stage",
            name: "stage",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "quote",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxPair",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxRange",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxOrder",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "commissionRatio",
            type: "uint16",
          },
          {
            internalType: "uint128",
            name: "minQuoteAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liveThreshold",
            type: "uint128",
          },
        ],
        indexed: false,
        internalType: "struct Configuration",
        name: "configuration",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "CreateVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        components: [
          {
            internalType: "enum Stage",
            name: "stage",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "quote",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxPair",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxRange",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "maxOrder",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "commissionRatio",
            type: "uint16",
          },
          {
            internalType: "uint128",
            name: "minQuoteAmount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "liveThreshold",
            type: "uint128",
          },
        ],
        internalType: "struct Configuration",
        name: "configuration",
        type: "tuple",
      },
    ],
    name: "createVault",
    outputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllVaults",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guardian",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "index",
        type: "bytes32",
      },
    ],
    name: "indexToVault",
    outputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releasePendingForVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "commissionRatio",
        type: "uint16",
      },
    ],
    name: "setVaultCommissionRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "liveThreshold",
        type: "uint128",
      },
    ],
    name: "setVaultLiveThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "setVaultManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "minQuoteAmount",
        type: "uint128",
      },
    ],
    name: "setVaultMinQuoteAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "newMaxPair",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "newMaxRange",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "newMaxOrder",
        type: "uint8",
      },
    ],
    name: "setVaultPortfolioLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "enum Stage",
        name: "newStage",
        type: "uint8",
      },
    ],
    name: "setVaultStage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVaults",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultBeacon",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "vaultToIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "index",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vaults",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162002306380380620023068339810160408190526200003491620001aa565b6200003f336200006f565b600180556001600160a01b0380831660805283811660a052811660c05262000066620000bf565b505050620001f4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a81b900460ff16156200012e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b600054600160a01b900460ff908116146200018b576000805460ff60a01b191660ff60a01b17905560405160ff81527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b80516001600160a01b0381168114620001a557600080fd5b919050565b600080600060608486031215620001c057600080fd5b620001cb846200018d565b9250620001db602085016200018d565b9150620001eb604085016200018d565b90509250925092565b60805160a05160c0516120cd62000239600039600081816102e50152610c5f0152600081816102400152610b7901526000818161019701526108ec01526120cd6000f3fe60806040523480156200001157600080fd5b5060043610620001455760003560e01c80638c64ea4a11620000bb578063c4d66de8116200007a578063c4d66de81462000307578063c7157d99146200031e578063ea75ccd31462000328578063f2fde38b146200033f578063fb561691146200035657600080fd5b80638c64ea4a14620002945780638d65402314620002ab5780638da5cb5b14620002b457806397331bf914620002c65780639d343be114620002df57600080fd5b8063715018a61162000108578063715018a6146200020257806374f9ad41146200020c57806379129225146200022357806379502c55146200023a5780638404c1c1146200026257600080fd5b80630de15ff4146200014a5780631e0b0819146200016357806338b69c68146200017a578063452a932014620001915780634b5426c014620001d6575b600080fd5b620001616200015b36600462000f83565b6200036d565b005b620001616200017436600462000fde565b620003e0565b620001616200018b36600462000f83565b6200046b565b620001b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b620001b9620001e736600462001043565b6003602052600090815260409020546001600160a01b031681565b62000161620004ab565b620001616200021d3660046200107b565b620004d1565b6200016162000234366004620010ae565b62000517565b620001b97f000000000000000000000000000000000000000000000000000000000000000081565b6200028562000273366004620010e1565b60046020526000908152604090205481565b604051908152602001620001cd565b620001b9620002a536600462001043565b62000550565b60025462000285565b6000546001600160a01b0316620001b9565b620002d06200057b565b604051620001cd91906200114e565b620001b97f000000000000000000000000000000000000000000000000000000000000000081565b6200016162000318366004620010e1565b62000654565b620001616200078f565b62000161620003393660046200117e565b6200096a565b6200016162000350366004620010e1565b620009a2565b620001b96200036736600462001200565b62000a21565b6200037762000d90565b60405163ad7da16960e01b81526001600160801b03821660048201526001600160a01b0383169063ad7da169906024015b600060405180830381600087803b158015620003c357600080fd5b505af1158015620003d8573d6000803e3d6000fd5b505050505050565b620003ea62000d90565b620003f783838362000dec565b604051632f01e65160e01b815260ff80851660048301528084166024830152821660448201526001600160a01b03851690632f01e65190606401600060405180830381600087803b1580156200044c57600080fd5b505af115801562000461573d6000803e3d6000fd5b5050505050505050565b6200047562000d90565b60405163e0f6717d60e01b81526001600160801b03821660048201526001600160a01b0383169063e0f6717d90602401620003a8565b620004b562000e35565b6040516001623f026d60e01b0319815260040160405180910390fd5b620004db62000d90565b620004e68162000e4b565b6040516352f7aea960e11b815261ffff821660048201526001600160a01b0383169063a5ef5d5290602401620003a8565b6200052162000d90565b60405163d0ebdbe760e01b81526001600160a01b03828116600483015283169063d0ebdbe790602401620003a8565b600281815481106200056157600080fd5b6000918252602090912001546001600160a01b0316905081565b60025460609060009067ffffffffffffffff8111156200059f576200059f620011b1565b604051908082528060200260200182016040528015620005c9578160200160208202803683370190505b50905060005b6002548110156200064e5760028181548110620005f057620005f06200135e565b9060005260206000200160009054906101000a90046001600160a01b03168282815181106200062357620006236200135e565b6001600160a01b039092166020928302919091019091015262000646816200138a565b9050620005cf565b50919050565b600054600160a81b900460ff16158080156200067d57506000546001600160a01b90910460ff16105b80620006a05750303b158015620006a05750600054600160a01b900460ff166001145b620007095760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff60a01b1916600160a01b179055801562000737576000805460ff60a81b1916600160a81b1790555b620007428262000e7f565b80156200078b576000805460ff60a81b19169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6200079962000ecf565b33600090815260046020526040902054620007ca5760405163e9d6016160e01b815233600482015260240162000700565b6000336001600160a01b0316636bd50cef6040518163ffffffff1660e01b815260040161012060405180830381865afa1580156200080c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008329190620013e7565b60408051600180825281830190925291925060009190602080830190803683370190505090508160200151816000815181106200087357620008736200135e565b6001600160a01b0392909216602092830291909101909101526040805160018082528183019092526000918160200160208202803683370190505090503381600081518110620008c757620008c76200135e565b6001600160a01b039283166020918202929092010152604051636168150d60e11b81527f00000000000000000000000000000000000000000000000000000000000000009091169063c2d02a1a90620009279085908590600401620014b2565b600060405180830381600087803b1580156200094257600080fd5b505af115801562000957573d6000803e3d6000fd5b505050505050506200096860018055565b565b6200097462000d90565b60405163ce3cd99760e01b81526001600160a01b0383169063ce3cd99790620003a890849060040162001507565b620009ac62000d90565b6001600160a01b03811662000a135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000700565b62000a1e8162000e7f565b50565b600062000a2d62000d90565b62000a46826060015183608001518460a0015162000dec565b62000a558260c0015162000e4b565b6000826020015186868660405160200162000a74949392919062001546565b60408051601f198184030181529181528151602092830120600081815260039093529120549091506001600160a01b03161562000ac4576040516304aabf3360e01b815260040160405180910390fd5b600083602001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000b09573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b2f91906200157f565b9050600062000b408260126200159f565b62000b4d90600a620016b8565b60208601516040516318b1f49f60e31b81526001600160a01b03918216600482015291925060009183917f0000000000000000000000000000000000000000000000000000000000000000169063c58fa4f89060240160c060405180830381865afa15801562000bc1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000be79190620016d9565b5162000bf49190620017c3565b60ff84166040808901919091526001600160801b03821660e08901525190915060009062000c2f9030908b908b908e908c90602401620018a2565b60408051601f198184030181529181526020820180516001600160e01b0316631e82cd7160e01b179052519091507f000000000000000000000000000000000000000000000000000000000000000090829062000c8c9062000f2a565b62000c99929190620018e6565b604051809103906000f08015801562000cb6573d6000803e3d6000fd5b5060028054600181810183557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b0385166001600160a01b0319918216811790925560008a8152600360209081526040808320805490941685179093559281526004909252902088905590549197507f39d68f7183782ad1368ff99cd7f50175152f9704958cae1e535ca5a4a17b94239188918d918d918d918d9162000d679162001946565b60405162000d7b969594939291906200195c565b60405180910390a15050505050949350505050565b6000546001600160a01b03163314620009685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000700565b601460ff8416118062000e025750601e60ff8316115b8062000e115750601e60ff8216115b1562000e30576040516378718ddb60e01b815260040160405180910390fd5b505050565b62000e3f62000d90565b62000968600062000e7f565b62000e5a6005612710620019b0565b8161ffff16111562000a1e57604051633dbb3d2d60e11b815260040160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60026001540362000f235760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640162000700565b6002600155565b6106d080620019c883390190565b6001600160a01b038116811462000a1e57600080fd5b803562000f5b8162000f38565b919050565b6001600160801b038116811462000a1e57600080fd5b803562000f5b8162000f60565b6000806040838503121562000f9757600080fd5b823562000fa48162000f38565b9150602083013562000fb68162000f60565b809150509250929050565b60ff8116811462000a1e57600080fd5b803562000f5b8162000fc1565b6000806000806080858703121562000ff557600080fd5b8435620010028162000f38565b93506020850135620010148162000fc1565b92506040850135620010268162000fc1565b91506060850135620010388162000fc1565b939692955090935050565b6000602082840312156200105657600080fd5b5035919050565b61ffff8116811462000a1e57600080fd5b803562000f5b816200105d565b600080604083850312156200108f57600080fd5b82356200109c8162000f38565b9150602083013562000fb6816200105d565b60008060408385031215620010c257600080fd5b8235620010cf8162000f38565b9150602083013562000fb68162000f38565b600060208284031215620010f457600080fd5b8135620011018162000f38565b9392505050565b600081518084526020808501945080840160005b83811015620011435781516001600160a01b0316875295820195908201906001016200111c565b509495945050505050565b60208152600062001101602083018462001108565b6004811062000a1e57600080fd5b803562000f5b8162001163565b600080604083850312156200119257600080fd5b82356200119f8162000f38565b9150602083013562000fb68162001163565b634e487b7160e01b600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715620011fa57634e487b7160e01b600052604160045260246000fd5b60405290565b6000806000808486036101608112156200121957600080fd5b8535620012268162000f38565b9450602086013567ffffffffffffffff808211156200124457600080fd5b818801915088601f8301126200125957600080fd5b8135818111156200126957600080fd5b8960208285010111156200127c57600080fd5b60208301965080955050505061012080603f19830112156200129d57600080fd5b620012a7620011c7565b9150620012b76040880162001171565b8252620012c76060880162000f4e565b6020830152620012da6080880162000fd1565b6040830152620012ed60a0880162000fd1565b60608301526200130060c0880162000fd1565b60808301526200131360e0880162000fd1565b60a0830152610100620013288189016200106e565b60c08401526200133a82890162000f76565b60e08401526200134e610140890162000f76565b9083015250939692955090935050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016200139f576200139f62001374565b5060010190565b805162000f5b8162001163565b805162000f5b8162000f38565b805162000f5b8162000fc1565b805162000f5b816200105d565b805162000f5b8162000f60565b60006101208284031215620013fb57600080fd5b62001405620011c7565b6200141083620013a6565b81526200142060208401620013b3565b60208201526200143360408401620013c0565b60408201526200144660608401620013c0565b60608201526200145960808401620013c0565b60808201526200146c60a08401620013c0565b60a08201526200147f60c08401620013cd565b60c08201526200149260e08401620013da565b60e0820152610100620014a7818501620013da565b908201529392505050565b604081526000620014c7604083018562001108565b8281036020840152620014db818562001108565b95945050505050565b600481106200150357634e487b7160e01b600052602160045260246000fd5b9052565b60208101620015178284620014e4565b92915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038581168252841660208201526060604082018190526000906200157590830184866200151d565b9695505050505050565b6000602082840312156200159257600080fd5b8151620011018162000fc1565b60ff828116828216039081111562001517576200151762001374565b600181815b80851115620015fc578160001904821115620015e057620015e062001374565b80851615620015ee57918102915b93841c9390800290620015c0565b509250929050565b600082620016155750600162001517565b81620016245750600062001517565b81600181146200163d5760028114620016485762001668565b600191505062001517565b60ff8411156200165c576200165c62001374565b50506001821b62001517565b5060208310610133831016604e8410600b84101617156200168d575081810a62001517565b620016998383620015bb565b8060001904821115620016b057620016b062001374565b029392505050565b60006200110160ff84168362001604565b80516003811062000f5b57600080fd5b600060c08284031215620016ec57600080fd5b60405160c0810167ffffffffffffffff82821081831117156200171f57634e487b7160e01b600052604160045260246000fd5b8160405284519150620017328262000f60565b90825260208401519062001746826200105d565b816020840152604085015191506200175e826200105d565b8160408401526060850151915080821682146200177a57600080fd5b5060608201526200178e60808401620016c9565b6080820152620017a160a08401620013da565b60a08201529392505050565b634e487b7160e01b600052601260045260246000fd5b60006001600160801b0380841680620017e057620017e0620017ad565b92169190910492915050565b620017f9828251620014e4565b60018060a01b03602082015116602083015260ff604082015116604083015260608101516200182d606084018260ff169052565b50608081015162001843608084018260ff169052565b5060a08101516200185960a084018260ff169052565b5060c08101516200187060c084018261ffff169052565b5060e08101516200188c60e08401826001600160801b03169052565b50610100908101516001600160801b0316910152565b6001600160a01b03868116825261018060208301819052600091620018cb848301888a6200151d565b925080861660408501525050620015756060830184620017ec565b60018060a01b038316815260006020604081840152835180604085015260005b81811015620019245785810183015185820160600152820162001906565b506000606082860101526060601f19601f830116850101925050509392505050565b8181038181111562001517576200151762001374565b6001600160a01b038781168252861660208201526101a0604082018190526000906200198c83820187896200151d565b9150506200199e6060830185620017ec565b82610180830152979650505050505050565b600082620019c257620019c2620017ad565b50049056fe60806040526040516106d03803806106d083398101604081905261002291610424565b818161003082826000610039565b5050505061054e565b610042836100fa565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100835750805b156100f5576100f3836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ed91906104e4565b8361027e565b505b505050565b6001600160a01b0381163b6101645760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101d8816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c991906104e4565b6001600160a01b03163b151590565b61023d5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b606482015260840161015b565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392909216919091179055565b60606102a383836040518060600160405280602781526020016106a9602791396102aa565b9392505050565b6060600080856001600160a01b0316856040516102c791906104ff565b600060405180830381855af49150503d8060008114610302576040519150601f19603f3d011682016040523d82523d6000602084013e610307565b606091505b50909250905061031986838387610323565b9695505050505050565b6060831561039257825160000361038b576001600160a01b0385163b61038b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161015b565b508161039c565b61039c83836103a4565b949350505050565b8151156103b45781518083602001fd5b8060405162461bcd60e51b815260040161015b919061051b565b80516001600160a01b03811681146103e557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561041b578181015183820152602001610403565b50506000910152565b6000806040838503121561043757600080fd5b610440836103ce565b60208401519092506001600160401b038082111561045d57600080fd5b818501915085601f83011261047157600080fd5b815181811115610483576104836103ea565b604051601f8201601f19908116603f011681019083821181831017156104ab576104ab6103ea565b816040528281528860208487010111156104c457600080fd5b6104d5836020830160208801610400565b80955050505050509250929050565b6000602082840312156104f657600080fd5b6102a3826103ce565b60008251610511818460208701610400565b9190910192915050565b602081526000825180602084015261053a816040850160208701610400565b601f01601f19169190910160400192915050565b61014c8061055d6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610029565b6100c2565b565b600061005c7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100bd91906100e6565b905090565b3660008037600080366000845af43d6000803e8080156100e1573d6000f35b3d6000fd5b6000602082840312156100f857600080fd5b81516001600160a01b038116811461010f57600080fd5b939250505056fea2646970667358221220231762b7606af16e11db6987ffa62fae1a034046f920893f5e0d640152be317364736f6c63430008130033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220df4a24f9e8caec5c301bff22416c069cd42ad0f1a0ce052770d93988d4d387e864736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
class VaultFactory__factory extends ethers_1.ContractFactory {
  constructor(...args) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }
  deploy(_config, _guardian, _vaultBeacon, overrides) {
    return super.deploy(_config, _guardian, _vaultBeacon, overrides || {});
  }
  getDeployTransaction(_config, _guardian, _vaultBeacon, overrides) {
    return super.getDeployTransaction(
      _config,
      _guardian,
      _vaultBeacon,
      overrides || {}
    );
  }
  attach(address) {
    return super.attach(address);
  }
  connect(signer) {
    return super.connect(signer);
  }
  static createInterface() {
    return new ethers_1.utils.Interface(_abi);
  }
  static connect(address, signerOrProvider) {
    return new ethers_1.Contract(address, _abi, signerOrProvider);
  }
}
exports.VaultFactory__factory = VaultFactory__factory;
VaultFactory__factory.bytecode = _bytecode;
VaultFactory__factory.abi = _abi;
