function n(n, e, t, r, i, c, o) {
  try {
    var s = n[c](o);
    var a = s.value;
  } catch (n) {
    t(n);
    return;
  }
  if (s.done) {
    e(a);
  } else {
    Promise.resolve(a).then(r, i);
  }
}
function e(e) {
  return function () {
    var t = this,
      r = arguments;
    return new Promise(function (i, c) {
      var o = e.apply(t, r);
      function s(e) {
        n(o, i, c, s, a, "next", e);
      }
      function a(e) {
        n(o, i, c, s, a, "throw", e);
      }
      s(undefined);
    });
  };
}
function t(n, e, t) {
  if (e in n) {
    Object.defineProperty(n, e, {
      value: t,
      enumerable: true,
      configurable: true,
      writable: true,
    });
  } else {
    n[e] = t;
  }
  return n;
}
function r(n) {
  for (var e = 1; e < arguments.length; e++) {
    var r = arguments[e] != null ? arguments[e] : {};
    var i = Object.keys(r);
    if (typeof Object.getOwnPropertySymbols === "function") {
      i = i.concat(
        Object.getOwnPropertySymbols(r).filter(function (n) {
          return Object.getOwnPropertyDescriptor(r, n).enumerable;
        })
      );
    }
    i.forEach(function (e) {
      t(n, e, r[e]);
    });
  }
  return n;
}
function i(n, e) {
  var t = Object.keys(n);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(n);
    if (e) {
      r = r.filter(function (e) {
        return Object.getOwnPropertyDescriptor(n, e).enumerable;
      });
    }
    t.push.apply(t, r);
  }
  return t;
}
function c(n, e) {
  e = e != null ? e : {};
  if (Object.getOwnPropertyDescriptors) {
    Object.defineProperties(n, Object.getOwnPropertyDescriptors(e));
  } else {
    i(Object(e)).forEach(function (t) {
      Object.defineProperty(n, t, Object.getOwnPropertyDescriptor(e, t));
    });
  }
  return n;
}
function o(n) {
  "@swc/helpers - typeof";
  return n && typeof Symbol !== "undefined" && n.constructor === Symbol
    ? "symbol"
    : typeof n;
}
function s(n, e) {
  var t,
    r,
    i,
    c,
    o = {
      label: 0,
      sent: function () {
        if (i[0] & 1) throw i[1];
        return i[1];
      },
      trys: [],
      ops: [],
    };
  return (
    (c = { next: s(0), throw: s(1), return: s(2) }),
    typeof Symbol === "function" &&
      (c[Symbol.iterator] = function () {
        return this;
      }),
    c
  );
  function s(n) {
    return function (e) {
      return a([n, e]);
    };
  }
  function a(c) {
    if (t) throw new TypeError("Generator is already executing.");
    while (o)
      try {
        if (
          ((t = 1),
          r &&
            (i =
              c[0] & 2
                ? r["return"]
                : c[0]
                ? r["throw"] || ((i = r["return"]) && i.call(r), 0)
                : r.next) &&
            !(i = i.call(r, c[1])).done)
        )
          return i;
        if (((r = 0), i)) c = [c[0] & 2, i.value];
        switch (c[0]) {
          case 0:
          case 1:
            i = c;
            break;
          case 4:
            o.label++;
            return { value: c[1], done: false };
          case 5:
            o.label++;
            r = c[1];
            c = [0];
            continue;
          case 7:
            c = o.ops.pop();
            o.trys.pop();
            continue;
          default:
            if (
              !((i = o.trys), (i = i.length > 0 && i[i.length - 1])) &&
              (c[0] === 6 || c[0] === 2)
            ) {
              o = 0;
              continue;
            }
            if (c[0] === 3 && (!i || (c[1] > i[0] && c[1] < i[3]))) {
              o.label = c[1];
              break;
            }
            if (c[0] === 6 && o.label < i[1]) {
              o.label = i[1];
              i = c;
              break;
            }
            if (i && o.label < i[2]) {
              o.label = i[2];
              o.ops.push(c);
              break;
            }
            if (i[2]) o.ops.pop();
            o.trys.pop();
            continue;
        }
        c = e.call(n, o);
      } catch (n) {
        c = [6, n];
        r = 0;
      } finally {
        t = i = 0;
      }
    if (c[0] & 5) throw c[1];
    return { value: c[0] ? c[1] : void 0, done: true };
  }
}
import { isInBinance as a, normalizeChainId as u } from "@binance/w3w-utils";
import {
  SwitchChainError as h,
  UserRejectedRequestError as l,
  getAddress as f,
  numberToHex as d,
} from "viem";
import { ChainNotConfiguredError as p, createConnector as b } from "wagmi";
import { injected as g } from "wagmi/connectors";
v.type = "binanceWallet";
function v() {
  var n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var i;
  return b(function (a) {
    return {
      id: "BinanceW3WSDK",
      name: "Binance Web3 Wallet",
      type: v.type,
      setup: function n() {
        return e(function () {
          var n;
          return s(this, function (e) {
            switch (e.label) {
              case 0:
                return [4, this.getProvider()];
              case 1:
                n = e.sent();
                n && n.on("connect", this.onConnect.bind(this));
                return [2];
            }
          });
        }).apply(this);
      },
      connect: function t() {
        var t =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
          r = t.chainId;
        return e(function () {
          var e, t, i;
          return s(this, function (c) {
            switch (c.label) {
              case 0:
                r = r !== null && r !== void 0 ? r : 56;
                return [4, this.getProvider({ chainId: r })];
              case 1:
                e = c.sent();
                e.on("accountsChanged", this.onAccountsChanged.bind(this)),
                  e.on("chainChanged", this.onChainChanged.bind(this)),
                  e.on("disconnect", this.onDisconnect.bind(this)),
                  setTimeout(function () {
                    return a.emitter.emit("message", { type: "connecting" });
                  }, 0),
                  e.setLng(n.lng || "en");
                return [4, e.enable()];
              case 2:
                t = c.sent().map(function (n) {
                  return f(n);
                });
                return [4, this.getChainId()];
              case 3:
                i = c.sent();
                return [2, { accounts: t, chainId: i }];
            }
          });
        }).apply(this);
      },
      disconnect: function n() {
        return e(function () {
          var n;
          return s(this, function (e) {
            switch (e.label) {
              case 0:
                return [4, this.getProvider()];
              case 1:
                n = e.sent();
                n.disconnect(),
                  n.removeListener("accountsChanged", this.onAccountsChanged),
                  n.removeListener("chainChanged", this.onChainChanged),
                  n.removeListener("disconnect", this.onDisconnect);
                return [2];
            }
          });
        }).apply(this);
      },
      getAccounts: function n() {
        return e(function () {
          return s(this, function (n) {
            switch (n.label) {
              case 0:
                return [4, this.getProvider()];
              case 1:
                return [4, n.sent().request({ method: "eth_accounts" })];
              case 2:
                return [
                  2,
                  n.sent().map(function (n) {
                    return f(n);
                  }),
                ];
            }
          });
        }).apply(this);
      },
      getChainId: function n() {
        return e(function () {
          var n, e, t, r;
          return s(this, function (i) {
            switch (i.label) {
              case 0:
                return [4, this.getProvider()];
              case 1:
                e = i.sent();
                if (!((n = e.chainId) !== null && n !== void 0)) return [3, 2];
                r = n;
                return [3, 4];
              case 2:
                return [
                  4,
                  e === null || e === void 0
                    ? void 0
                    : e.request({ method: "eth_chainId" }),
                ];
              case 3:
                r = i.sent();
                i.label = 4;
              case 4:
                t = r;
                return [2, u(t)];
            }
          });
        }).apply(this);
      },
      getProvider: function u() {
        var u =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
          h = u.chainId;
        return e(function () {
          var e, u, l, f, d;
          return s(this, function (s) {
            switch (s.label) {
              case 0:
                if (
                  (typeof window === "undefined" ? "undefined" : o(window)) >
                  "u"
                )
                  return [2];
                return [4, import("@binance/w3w-ethereum-provider")];
              case 1:
                (l = s.sent().default),
                  (f =
                    h ||
                    ((e = a.chains[0]) === null || e === void 0
                      ? void 0
                      : e.id)),
                  (d = n.infuraId
                    ? {}
                    : a.chains.reduce(function (n, e) {
                        return c(
                          r({}, n),
                          t({}, e.id, e.rpcUrls.default.http[0])
                        );
                      }, {}));
                return [
                  2,
                  ((i = new l(
                    c(r({}, n), {
                      chainId: f,
                      rpc: r(
                        {},
                        d,
                        (u = this.options) === null || u === void 0
                          ? void 0
                          : u.rpc
                      ),
                    })
                  )),
                  i),
                ];
            }
          });
        }).apply(this);
      },
      isAuthorized: function n() {
        return e(function () {
          var n;
          return s(this, function (e) {
            switch (e.label) {
              case 0:
                e.trys.push([0, 2, , 3]);
                return [4, this.getAccounts()];
              case 1:
                return [2, e.sent().length > 0];
              case 2:
                n = e.sent();
                return [2, !1];
              case 3:
                return [2];
            }
          });
        }).apply(this);
      },
      switchChain: function n(n) {
        var t = n.chainId;
        return e(function () {
          var n, e, r, i, c;
          return s(this, function (o) {
            switch (o.label) {
              case 0:
                n = a.chains.find(function (n) {
                  return n.id === t;
                });
                if (!n) throw new h(new p());
                return [4, this.getProvider()];
              case 1:
                (e = o.sent()), (r = d(n.id));
                o.label = 2;
              case 2:
                o.trys.push([2, 4, , 5]);
                return [
                  4,
                  Promise.race([
                    e.request({
                      method: "wallet_switchEthereumChain",
                      params: [{ chainId: r }],
                    }),
                    new Promise(function (n) {
                      return a.emitter.once("change", function (e) {
                        var r = e.chainId;
                        r === t && n(t);
                      });
                    }),
                  ]),
                ];
              case 3:
                return [2, (o.sent(), n)];
              case 4:
                i = o.sent();
                c =
                  typeof i == "string"
                    ? i
                    : i === null || i === void 0
                    ? void 0
                    : i.message;
                throw /user rejected request/i.test(c) ? new l(i) : new h(i);
              case 5:
                return [2];
            }
          });
        }).apply(this);
      },
      onAccountsChanged: function n(n) {
        n.length === 0
          ? a.emitter.emit("disconnect")
          : a.emitter.emit("change", {
              accounts: n.map(function (n) {
                return f(n);
              }),
            });
      },
      onChainChanged: function n(n) {
        var e = u(n);
        a.emitter.emit("change", { chainId: e });
      },
      onConnect: function n(n) {
        return e(function () {
          var e, t, r;
          return s(this, function (i) {
            switch (i.label) {
              case 0:
                return [4, this.getAccounts()];
              case 1:
                e = i.sent();
                if (e.length === 0) return [2];
                t = u(n.chainId);
                a.emitter.emit("connect", { accounts: e, chainId: t });
                return [4, this.getProvider()];
              case 2:
                r = i.sent();
                r &&
                  (r.removeListener("connect", this.onConnect.bind(this)),
                  r.on("accountsChanged", this.onAccountsChanged.bind(this)),
                  r.on("chainChanged", this.onChainChanged),
                  r.on("disconnect", this.onDisconnect.bind(this)));
                return [2];
            }
          });
        }).apply(this);
      },
      onDisconnect: function n(n) {
        return e(function () {
          var n;
          return s(this, function (e) {
            switch (e.label) {
              case 0:
                a.emitter.emit("disconnect");
                return [4, this.getProvider()];
              case 1:
                n = e.sent();
                n.removeListener(
                  "accountsChanged",
                  this.onAccountsChanged.bind(this)
                ),
                  n.removeListener("chainChanged", this.onChainChanged),
                  n.removeListener("disconnect", this.onDisconnect.bind(this)),
                  n.on("connect", this.onConnect.bind(this));
                return [2];
            }
          });
        }).apply(this);
      },
    };
  });
}
var m = function () {
  return a() ? g : v;
};
export { m as getWagmiConnectorV2 };
